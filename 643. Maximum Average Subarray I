class Solution {
    public double findMaxAverage(int[] nums, int k) {
        int left = 0;
        int right = k-1; 
        double max_avg = 0;
        int length = nums.length;
        while (left  < length - k - 1 && right < length -1){
            for (int i : k){
                int sum += nums[left + i];
            }
            double temp_avg = sum / k;
            max_avg = Math.max(temp_avg, max_avg);
        }
    return max_avg; 
    }
}
Corrected by GPT and thinking of sliding window : 
class Solution {
    public double findMaxAverage(int[] nums, int k) {
        int windowSum = 0; 
        for (int i = 0; i < k; i++){
            windowSum += nums[i];
        }
        int maxSum = windowSum;
        int n = nums.length;
        for (int i = k; i < n; i++){
            windowSum = windowSum - nums[i - k] + nums [i];
            maxSum = Math.max(windowSum, maxSum);
        }
        double max_avg = (double) maxSum / k; 
        return max_avg; 
    }
}
